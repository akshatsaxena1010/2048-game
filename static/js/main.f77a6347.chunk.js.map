{"version":3,"sources":["Tile.js","Grid.js","Random.js","App.js","reportWebVitals.js","index.js"],"names":["divStyle","padding","Tile","props","style","num","Grid","grid","Random","useState","Array","fill","map","setGrid","score","setScore","getRandomNumber","n","Math","floor","random","resetGrid","newGrid","firstX","firstY","secondX","secondY","useEffect","logic","fourArrays","newArray","cloneDeep","i","b","slow","fast","JSON","stringify","added","newX","newY","addNumber","ArrowKeysReact","config","left","readyGrid","right","reverse","up","_","colIndex","row","down","console","log","events","tabIndex","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f77a6347.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst divStyle = {\r\n  padding: 5,\r\n};\r\n\r\nconst Tile = (props) => {\r\n  return <span style={divStyle}>{props.num}</span>;\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\n\r\nconst Grid = (props) => {\r\n  // const showGrid = () => {\r\n\r\n  //     let count = 0\r\n  //     props.grid.map((row) => {\r\n  //         console.log(row)\r\n  //         return (\r\n  //             <div>\r\n  //                 {row.map((num) => {\r\n  //                     return <Tile num={num} key={count++}/>\r\n  //                 })}\r\n  //             </div>\r\n  //         )\r\n  //     })\r\n  // }\r\n  return (\r\n    <div>\r\n      {/* {showGrid()} */}\r\n      <Tile num={props.grid[0][0]} />\r\n      <Tile num={props.grid[0][1]} />\r\n      <Tile num={props.grid[0][2]} />\r\n      <Tile num={props.grid[0][3]} />\r\n      <br />\r\n      <Tile num={props.grid[1][0]} />\r\n      <Tile num={props.grid[1][1]} />\r\n      <Tile num={props.grid[1][2]} />\r\n      <Tile num={props.grid[1][3]} />\r\n      <br />\r\n      <Tile num={props.grid[2][0]} />\r\n      <Tile num={props.grid[2][1]} />\r\n      <Tile num={props.grid[2][2]} />\r\n      <Tile num={props.grid[2][3]} />\r\n      <br />\r\n      <Tile num={props.grid[3][0]} />\r\n      <Tile num={props.grid[3][1]} />\r\n      <Tile num={props.grid[3][2]} />\r\n      <Tile num={props.grid[3][3]} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport ArrowKeysReact from \"arrow-keys-react\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst Random = () => {\r\n  const [grid, setGrid] = useState(\r\n    new Array(4).fill(0).map(() => new Array(4).fill(0))\r\n  );\r\n\r\n  const [score, setScore] = useState(0);\r\n\r\n  const getRandomNumber = (n) => Math.floor(Math.random() * n);\r\n\r\n  const resetGrid = () => {\r\n    let newGrid = new Array(4).fill(0).map(() => new Array(4).fill(0));\r\n    let firstX = getRandomNumber(4);\r\n    let firstY = getRandomNumber(4);\r\n\r\n    let secondX = getRandomNumber(4);\r\n    let secondY = getRandomNumber(4);\r\n\r\n    // console.log('..')\r\n\r\n    while (firstX === secondX && firstY === secondY) {\r\n      // console.log('.....dsada')\r\n      secondX = getRandomNumber(3);\r\n      secondY = getRandomNumber(3);\r\n    }\r\n\r\n    newGrid[firstX][firstY] = 2 * (getRandomNumber(2) + 1);\r\n    newGrid[secondX][secondY] = 2 * (getRandomNumber(2) + 1);\r\n\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialize = () => {\r\n      resetGrid();\r\n    };\r\n    initialize();\r\n  }, []);\r\n\r\n  const addNumber = (newGrid) => {\r\n    let added = false;\r\n    let gridFull = false;\r\n    while (!added) {\r\n      // console.log(count++);\r\n      if (gridFull) break;\r\n\r\n      let newX = getRandomNumber(4);\r\n      let newY = getRandomNumber(4);\r\n\r\n      if (newGrid[newX][newY] === 0) {\r\n        newGrid[newX][newY] = 2 * (getRandomNumber(2) + 1);\r\n        added = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const logic = (fourArrays) => {\r\n    let newArray = cloneDeep(fourArrays);\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            setScore(score + b[slow] * 2);\r\n            b[fast] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(fourArrays) !== JSON.stringify(newArray)) {\r\n      addNumber(newArray);\r\n    }\r\n\r\n    return newArray;\r\n  };\r\n\r\n  ArrowKeysReact.config({\r\n    left: () => {\r\n      let readyGrid = cloneDeep(grid);\r\n      let newGrid = logic(readyGrid);\r\n      setGrid(newGrid);\r\n    },\r\n\r\n    right: () => {\r\n      let readyGrid = cloneDeep(grid);\r\n      for (let row of readyGrid) {\r\n        row.reverse();\r\n      }\r\n      // console.log(readyGrid);\r\n      let newGrid = logic(readyGrid);\r\n      for (let row of newGrid) {\r\n        row.reverse();\r\n      }\r\n      setGrid(newGrid);\r\n    },\r\n\r\n    up: () => {\r\n      let readyGrid = cloneDeep(grid);\r\n      let newGrid = readyGrid[0].map((_, colIndex) =>\r\n        readyGrid.map((row) => row[colIndex])\r\n      );\r\n      newGrid = logic(newGrid);\r\n      readyGrid = newGrid[0].map((_, colIndex) =>\r\n        newGrid.map((row) => row[colIndex])\r\n      );\r\n      setGrid(readyGrid);\r\n    },\r\n\r\n    down: () => {\r\n      let readyGrid = cloneDeep(grid);\r\n      let newGrid = readyGrid[0].map((_, colIndex) =>\r\n        readyGrid.map((row) => row[colIndex])\r\n      );\r\n      for (let row of newGrid) {\r\n        row.reverse();\r\n      }\r\n      console.log(newGrid);\r\n      newGrid = logic(newGrid);\r\n      readyGrid = newGrid[0].map((_, colIndex) =>\r\n        newGrid.map((row) => row[colIndex])\r\n      );\r\n      readyGrid.reverse();\r\n      console.log(readyGrid);\r\n      setGrid(readyGrid);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div {...ArrowKeysReact.events} tabIndex=\"1\">\r\n      <Grid grid={grid} />\r\n      {/* {grid} */}\r\n      <br />\r\n      <button onClick={resetGrid}>Reset</button>\r\n      <br />\r\n      {score}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n","import React from \"react\";\nimport Random from \"./Random.js\";\n\n// const divStyle = {\n//   margin: \"auto\",\n//   width: \"8%\",\n//   border: \"3px solid green\",\n//   padding: \"10px\"\n// }\nfunction App() {\n  return (\n    // <div style={divStyle}>\n    <div>\n      <Random />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}