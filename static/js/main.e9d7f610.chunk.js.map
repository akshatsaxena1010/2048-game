{"version":3,"sources":["Tile.js","Grid.js","Random.js","App.js","reportWebVitals.js","index.js"],"names":["divStyle","padding","Tile","props","style","num","Grid","grid","Random","useState","Array","fill","map","setGrid","score","setScore","highScore","setHighScore","highScoreFlag","setHighScoreFlag","highScoreName","setHighScoreName","actualScore","getRandomNumber","n","Math","floor","random","resetGrid","window","prompt","newGrid","firstX","firstY","secondX","secondY","useEffect","logic","fourArrays","checkGameFlag","newArray","cloneDeep","i","b","slow","fast","JSON","stringify","added","newX","newY","addNumber","left","readyGrid","right","reverse","up","_","colIndex","row","down","r","ele","confirm","tabIndex","onKeyDown","e","keyCode","handleKeyDown","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9d7f610.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst divStyle = {\r\n  padding: 5,\r\n};\r\n\r\nconst Tile = (props) => {\r\n  return <span style={divStyle}>{props.num}</span>;\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\n\r\nconst Grid = (props) => {\r\n  // const showGrid = () => {\r\n\r\n  //     let count = 0\r\n  //     props.grid.map((row) => {\r\n  //         console.log(row)\r\n  //         return (\r\n  //             <div>\r\n  //                 {row.map((num) => {\r\n  //                     return <Tile num={num} key={count++}/>\r\n  //                 })}\r\n  //             </div>\r\n  //         )\r\n  //     })\r\n  // }\r\n  return (\r\n    <div>\r\n      {/* {showGrid()} */}\r\n      <Tile num={props.grid[0][0]} />\r\n      <Tile num={props.grid[0][1]} />\r\n      <Tile num={props.grid[0][2]} />\r\n      <Tile num={props.grid[0][3]} />\r\n      <br />\r\n      <Tile num={props.grid[1][0]} />\r\n      <Tile num={props.grid[1][1]} />\r\n      <Tile num={props.grid[1][2]} />\r\n      <Tile num={props.grid[1][3]} />\r\n      <br />\r\n      <Tile num={props.grid[2][0]} />\r\n      <Tile num={props.grid[2][1]} />\r\n      <Tile num={props.grid[2][2]} />\r\n      <Tile num={props.grid[2][3]} />\r\n      <br />\r\n      <Tile num={props.grid[3][0]} />\r\n      <Tile num={props.grid[3][1]} />\r\n      <Tile num={props.grid[3][2]} />\r\n      <Tile num={props.grid[3][3]} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst WINNING_NUMBER = 128;\r\nconst Random = () => {\r\n  const [grid, setGrid] = useState(\r\n    new Array(4).fill(0).map(() => new Array(4).fill(0))\r\n  );\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const [highScoreFlag, setHighScoreFlag] = useState(false);\r\n  const [highScoreName, setHighScoreName] = useState(\"\");\r\n\r\n  let actualScore = 0;\r\n\r\n  const getRandomNumber = (n) => Math.floor(Math.random() * n);\r\n\r\n  const resetGrid = () => {\r\n    if (highScoreFlag === true) {\r\n      setHighScoreName(\r\n        window.prompt(\"You have scored the highest! Please Enter Your Name\")\r\n      );\r\n      setHighScoreFlag(false);\r\n    }\r\n\r\n    let newGrid = new Array(4).fill(0).map(() => new Array(4).fill(0));\r\n    let firstX = getRandomNumber(4);\r\n    let firstY = getRandomNumber(4);\r\n\r\n    let secondX = getRandomNumber(4);\r\n    let secondY = getRandomNumber(4);\r\n\r\n    while (firstX === secondX && firstY === secondY) {\r\n      secondX = getRandomNumber(3);\r\n      secondY = getRandomNumber(3);\r\n    }\r\n\r\n    newGrid[firstX][firstY] = 2 * (getRandomNumber(2) + 1);\r\n    newGrid[secondX][secondY] = 2 * (getRandomNumber(2) + 1);\r\n    actualScore = 0;\r\n\r\n    setScore(0);\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialize = () => {\r\n      resetGrid();\r\n    };\r\n    initialize();\r\n  }, []);\r\n\r\n  const addNumber = (newGrid) => {\r\n    let added = false;\r\n    let gridFull = false;\r\n    while (!added) {\r\n      if (gridFull) break;\r\n\r\n      let newX = getRandomNumber(4);\r\n      let newY = getRandomNumber(4);\r\n\r\n      if (newGrid[newX][newY] === 0) {\r\n        newGrid[newX][newY] = 2 * (getRandomNumber(2) + 1);\r\n        added = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const logic = (fourArrays, checkGameFlag) => {\r\n    let newArray = cloneDeep(fourArrays);\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            b[fast] = 0;\r\n            if (checkGameFlag) {\r\n              actualScore = score + b[slow];\r\n              setScore(actualScore);\r\n              if (actualScore > highScore) {\r\n                setHighScore(actualScore);\r\n                setHighScoreFlag(true);\r\n              }\r\n            }\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(fourArrays) !== JSON.stringify(newArray)) {\r\n      addNumber(newArray);\r\n    }\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const left = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n    let newGrid = logic(readyGrid, checkGameFlag);\r\n    if (checkGameFlag) setGrid(newGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(newGrid, checkGameFlag)) ===\r\n        JSON.stringify(newGrid)\r\n      );\r\n  };\r\n\r\n  const right = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n    for (let row of readyGrid) {\r\n      row.reverse();\r\n    }\r\n    let newGrid = logic(readyGrid, checkGameFlag);\r\n    for (let row of newGrid) {\r\n      row.reverse();\r\n    }\r\n\r\n    if (checkGameFlag) setGrid(newGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(newGrid, checkGameFlag)) ===\r\n        JSON.stringify(newGrid)\r\n      );\r\n  };\r\n\r\n  const up = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n\r\n    let newGrid = readyGrid[0].map((_, colIndex) =>\r\n      readyGrid.map((row) => row[colIndex])\r\n    );\r\n    newGrid = logic(newGrid, checkGameFlag);\r\n    readyGrid = newGrid[0].map((_, colIndex) =>\r\n      newGrid.map((row) => row[colIndex])\r\n    );\r\n    if (checkGameFlag) setGrid(readyGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(readyGrid, checkGameFlag)) ===\r\n        JSON.stringify(readyGrid)\r\n      );\r\n  };\r\n\r\n  const down = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n    let newGrid = readyGrid[0].map((_, colIndex) =>\r\n      readyGrid.map((row) => row[colIndex])\r\n    );\r\n    for (let row of newGrid) {\r\n      row.reverse();\r\n    }\r\n    newGrid = logic(newGrid, checkGameFlag);\r\n    readyGrid = newGrid[0].map((_, colIndex) =>\r\n      newGrid.map((row) => row[colIndex])\r\n    );\r\n    readyGrid.reverse();\r\n    if (checkGameFlag) {\r\n      setGrid(readyGrid);\r\n      return true;\r\n    } else\r\n      return (\r\n        JSON.stringify(logic(readyGrid, checkGameFlag)) ===\r\n        JSON.stringify(readyGrid)\r\n      );\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        // console.log(\"Upkey\");\r\n        up(true);\r\n        break;\r\n      case 40:\r\n        // console.log(\"Down\");\r\n        down(true);\r\n        break;\r\n      case 37:\r\n        // console.log(\"Left\");\r\n        left(true);\r\n        break;\r\n      case 39:\r\n        // console.log(\"right\");\r\n        right(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (up(false) && down(false) && left(false) && right(false)) {\r\n      window.confirm(\"No more moves left. Game is over. Thanks for playing\");\r\n      resetGrid();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    grid.map((r) =>\r\n      r.map((ele) => {\r\n        if (ele === WINNING_NUMBER) {\r\n          window.confirm(\"You have won the game. Do you want to continue?\");\r\n          resetGrid();\r\n        }\r\n      })\r\n    );\r\n  }, [grid]);\r\n\r\n  return (\r\n    <div tabIndex=\"1\" onKeyDown={(e) => handleKeyDown(e)}>\r\n      <Grid grid={grid} />\r\n      <br />\r\n      <button onClick={resetGrid}>Reset</button>\r\n      <br />\r\n      Score: {score}\r\n      <br />\r\n      High Score: {highScore}\r\n      <br />\r\n      Name: {highScoreName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n","import React from \"react\";\nimport Random from \"./Random.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Random />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}