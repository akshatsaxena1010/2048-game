{"version":3,"sources":["Tile.js","Row.js","Grid.js","Scorecard.js","Random.js","App.js","reportWebVitals.js","index.js"],"names":["getColors","num","getFontColor","Tile","props","style","divStyle","numStyle","padding","minWidth","height","background","color","marginLeft","marginTop","fontSize","position","borderRadius","fontWeight","Row","row","map","e","i","display","width","margin","gridStyle","align","Grid","grid","float","scoreStyle","textAlign","marginRight","textStyle","Scorecard","score","highScore","name","getRandomNumber","n","Math","floor","random","Random","useState","Array","fill","setGrid","setScore","setHighScore","highScoreFlag","setHighScoreFlag","highScoreName","setHighScoreName","actualScore","useEffect","resetGrid","includes","window","confirm","prompt","newGrid","firstX","firstY","secondX","secondY","logic","fourArrays","checkGameFlag","newArray","JSON","parse","stringify","b","left","right","added","newX","newY","addNumber","tempGrid","reverse","up","_","colIndex","down","tabIndex","onKeyDown","keyCode","handleKeyDown","appStyle","h1Style","onClick","buttonStyle","outline","marginBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","cursor","textDecoration","boxShadow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a71dc2ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst getColors = (num) => {\r\n  switch (num) {\r\n    case 2:\r\n      return \"#EBDCD0\";\r\n    case 4:\r\n      return \"#E9DBBA\";\r\n    case 8:\r\n      return \"#E9A067\";\r\n    case 16:\r\n      return \"#F08151\";\r\n    case 32:\r\n      return \"#F2654F\";\r\n    case 64:\r\n      return \"#F1462C\";\r\n    case 128:\r\n      return \"#E7C65E\";\r\n    case 256:\r\n      return \"#E8C350\";\r\n    case 512:\r\n      return \"#E8BE40\";\r\n    case 1024:\r\n      return \"#E8BB31\";\r\n    case 2048:\r\n      return \"#E7B723\";\r\n    default:\r\n      return \"#C2B3A3\";\r\n  }\r\n};\r\n\r\nconst getFontColor = (num) => {\r\n  if (num === 2 || num === 4) return \"black\";\r\n  return \"white\";\r\n};\r\n\r\nconst Tile = (props) => {\r\n  return (\r\n    <span style={divStyle(props.num)}>\r\n      <span style={numStyle}>{props.num !== 0 ? props.num : \"\"}</span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n\r\nconst numStyle = {};\r\n\r\nconst divStyle = (num) => {\r\n  return {\r\n    padding: 5,\r\n    minWidth: 120,\r\n    height: 120,\r\n    background: getColors(num),\r\n    color: getFontColor(num),\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    fontSize: \"45px\",\r\n    position: \"relative\",\r\n    borderRadius: \"6%\",\r\n    fontWeight: \"bold\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default function Row(props) {\r\n  return (\r\n    <div style={divStyle}>\r\n      {props.row.map((e, i) => (\r\n        <Tile num={e} key={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst divStyle = {\r\n  display: \"flex\",\r\n  width: \"100%\",\r\n  margin: \"auto\",\r\n};\r\n","import React from \"react\";\r\nimport Row from \"./Row\";\r\n\r\nconst Grid = (props) => {\r\n  let grid = props.grid;\r\n  return (\r\n    <div style={style.gridStyle}>\r\n      {grid.map((row, i) => {\r\n        return <Row row={row} key={i} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  gridStyle: {\r\n    align: \"center\",\r\n  },\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\n\r\nconst Scorecard = (props) => {\r\n  return (\r\n    <div style={style.divStyle}>\r\n      <div style={style.scoreStyle}>\r\n        <span style={style.textStyle}>SCORE</span>\r\n        <br />\r\n        {props.score}\r\n      </div>\r\n      <div style={style.scoreStyle}>\r\n        <span style={style.textStyle}>HIGHEST</span>\r\n        <br />\r\n        {props.highScore}\r\n      </div>\r\n      <div style={style.scoreStyle}>\r\n        <span style={style.textStyle}>BEST SCORE BY</span>\r\n        <br />\r\n        {props.name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  divStyle: {\r\n    float: \"left\",\r\n  },\r\n  scoreStyle: {\r\n    float: \"left\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    width: \"relative\",\r\n    background: \"#bbada0\",\r\n    fontSize: \"30px\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"6px\",\r\n    padding: \"0px 20px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    marginRight: 10,\r\n    marginTop: 10,\r\n  },\r\n  textStyle: {\r\n    fontSize: \"17px\",\r\n  },\r\n};\r\nexport default Scorecard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport Scorecard from \"./Scorecard\";\r\n\r\nconst WINNING_NUMBER = 2048;\r\n\r\nconst getRandomNumber = (n) => Math.floor(Math.random() * n);\r\n\r\nconst Random = () => {\r\n  const [grid, setGrid] = useState(\r\n    new Array(4).fill(0).map(() => new Array(4).fill(0))\r\n  );\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const [highScoreFlag, setHighScoreFlag] = useState(false);\r\n  const [highScoreName, setHighScoreName] = useState(\"-\");\r\n\r\n  let actualScore = 0;\r\n\r\n  useEffect(() => {\r\n    resetGrid();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    for (let r of grid)\r\n      if (r.includes(WINNING_NUMBER)) {\r\n        window.confirm(\"You have won the game. Congratulations!\");\r\n        resetGrid();\r\n      }\r\n  }, [grid]);\r\n\r\n  const resetGrid = () => {\r\n    if (highScoreFlag === true) {\r\n      let name = window.prompt(\r\n        \"You have scored the highest! Please Enter Your Name\"\r\n      );\r\n      if (name) setHighScoreName(name);\r\n      else setHighScoreName(\"-\");\r\n      setHighScoreFlag(false);\r\n    }\r\n\r\n    let newGrid = new Array(4).fill(0).map(() => new Array(4).fill(0));\r\n    let firstX = getRandomNumber(4);\r\n    let firstY = getRandomNumber(4);\r\n\r\n    let secondX = getRandomNumber(4);\r\n    let secondY = getRandomNumber(4);\r\n\r\n    while (firstX === secondX && firstY === secondY) {\r\n      secondX = getRandomNumber(3);\r\n      secondY = getRandomNumber(3);\r\n    }\r\n\r\n    newGrid[firstX][firstY] = 2 * (getRandomNumber(2) + 1);\r\n    newGrid[secondX][secondY] = 2 * (getRandomNumber(2) + 1);\r\n    actualScore = 0;\r\n\r\n    setScore(0);\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const addNumber = (newGrid) => {\r\n    let added = false;\r\n    while (!added) {\r\n      let newX = getRandomNumber(4);\r\n      let newY = getRandomNumber(4);\r\n\r\n      if (newGrid[newX][newY] === 0) {\r\n        newGrid[newX][newY] = 2 * (getRandomNumber(2) + 1);\r\n        added = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const logic = (fourArrays, checkGameFlag) => {\r\n    let newArray = JSON.parse(JSON.stringify(fourArrays));\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let left = 0;\r\n      let right = 1;\r\n      while (left < 4) {\r\n        if (right === 4) {\r\n          right = left + 1;\r\n          left++;\r\n          continue;\r\n        }\r\n        if (b[left] === 0 && b[right] === 0) {\r\n          right++;\r\n        } else if (b[left] === 0 && b[right] !== 0) {\r\n          b[left] = b[right];\r\n          b[right] = 0;\r\n          right++;\r\n        } else if (b[left] !== 0 && b[right] === 0) {\r\n          right++;\r\n        } else if (b[left] !== 0 && b[right] !== 0) {\r\n          if (b[left] === b[right]) {\r\n            b[left] = b[left] + b[right];\r\n            b[right] = 0;\r\n            if (checkGameFlag) {\r\n              actualScore = score + b[left];\r\n              setScore(actualScore);\r\n              if (actualScore > highScore) {\r\n                setHighScore(actualScore);\r\n                setHighScoreFlag(true);\r\n              }\r\n            }\r\n            right = left + 1;\r\n            left++;\r\n          } else {\r\n            left++;\r\n            right = left + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(fourArrays) !== JSON.stringify(newArray)) {\r\n      addNumber(newArray);\r\n    }\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const left = (checkGameFlag) => {\r\n    let tempGrid = JSON.parse(JSON.stringify(grid));\r\n    let newGrid = logic(tempGrid, checkGameFlag);\r\n    if (checkGameFlag) setGrid(newGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(newGrid, checkGameFlag)) ===\r\n        JSON.stringify(newGrid)\r\n      );\r\n  };\r\n\r\n  const right = (checkGameFlag) => {\r\n    let tempGrid = JSON.parse(JSON.stringify(grid));\r\n    for (let row of tempGrid) {\r\n      row.reverse();\r\n    }\r\n    let newGrid = logic(tempGrid, checkGameFlag);\r\n    for (let row of newGrid) {\r\n      row.reverse();\r\n    }\r\n\r\n    if (checkGameFlag) setGrid(newGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(newGrid, checkGameFlag)) ===\r\n        JSON.stringify(newGrid)\r\n      );\r\n  };\r\n\r\n  const up = (checkGameFlag) => {\r\n    let tempGrid = JSON.parse(JSON.stringify(grid));\r\n\r\n    let newGrid = tempGrid[0].map((_, colIndex) =>\r\n      tempGrid.map((row) => row[colIndex])\r\n    );\r\n    newGrid = logic(newGrid, checkGameFlag);\r\n    tempGrid = newGrid[0].map((_, colIndex) =>\r\n      newGrid.map((row) => row[colIndex])\r\n    );\r\n    if (checkGameFlag) setGrid(tempGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(tempGrid, checkGameFlag)) ===\r\n        JSON.stringify(tempGrid)\r\n      );\r\n  };\r\n\r\n  const down = (checkGameFlag) => {\r\n    let tempGrid = JSON.parse(JSON.stringify(grid));\r\n    tempGrid = tempGrid[0].map((_, colIndex) =>\r\n      tempGrid.map((row) => row[colIndex])\r\n    );\r\n    for (let row of tempGrid) {\r\n      row.reverse();\r\n    }\r\n    tempGrid = logic(tempGrid, checkGameFlag);\r\n    tempGrid = tempGrid[0].map((_, colIndex) =>\r\n      tempGrid.map((row) => row[colIndex])\r\n    );\r\n    tempGrid.reverse();\r\n    if (checkGameFlag) {\r\n      setGrid(tempGrid);\r\n      return true;\r\n    } else\r\n      return (\r\n        JSON.stringify(logic(tempGrid, checkGameFlag)) ===\r\n        JSON.stringify(tempGrid)\r\n      );\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        // console.log(\"Upkey\");\r\n        up(true);\r\n        break;\r\n      case 40:\r\n        // console.log(\"Down\");\r\n        down(true);\r\n        break;\r\n      case 37:\r\n        // console.log(\"Left\");\r\n        left(true);\r\n        break;\r\n      case 39:\r\n        // console.log(\"right\");\r\n        right(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (up(false) && down(false) && left(false) && right(false)) {\r\n      window.confirm(\"No more moves left. Game is over. Thanks for playing\");\r\n      resetGrid();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      tabIndex=\"1\"\r\n      onKeyDown={(e) => handleKeyDown(e)}\r\n      style={style.appStyle}\r\n    >\r\n      <h1 style={style.h1Style}>2048</h1>\r\n      <Scorecard score={score} highScore={highScore} name={highScoreName} />\r\n      <Grid grid={grid} />\r\n      <br />\r\n      <button onClick={resetGrid} style={style.buttonStyle}>\r\n        New Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n\r\nconst style = {\r\n  appStyle: {\r\n    outline: \"none\",\r\n    display: \"inline\",\r\n    width: \"50%\",\r\n    margin: \"auto\",\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    paddingLeft: 20,\r\n  },\r\n  buttonStyle: {\r\n    margin: \"auto\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n    background: \"#8f7a66\",\r\n    borderRadius: 100,\r\n    color: \"#f9f6f2\",\r\n    marginBottom: 10,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    cursor: \"pointer\",\r\n    textDecoration: \"none\",\r\n    boxShadow: \"none\",\r\n  },\r\n  h1Style: {\r\n    float: \"left\",\r\n    fontSize: 64,\r\n    paddingTop: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 15,\r\n    margin: 0,\r\n    color: \"#776e65\",\r\n  },\r\n};\r\n","import React from \"react\";\nimport Random from \"./Random.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Random />\n      <br />\n      *Please press TAB or click on the grid to start playing\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}