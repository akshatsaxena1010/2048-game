{"version":3,"sources":["Tile.js","Row.js","Grid.js","Scorecard.js","Random.js","App.js","reportWebVitals.js","index.js"],"names":["getColors","num","getFontColor","Tile","props","style","divStyle","numStyle","padding","width","height","background","color","marginLeft","marginTop","fontSize","position","borderRadius","fontWeight","Row","row","map","e","i","display","margin","gridStyle","float","align","Grid","grid","scoreStyle","textAlign","marginRight","highScoreStyle","marginBottom","Scorecard","score","highScore","name","getRandomNumber","n","Math","floor","random","Random","useState","Array","fill","setGrid","setScore","setHighScore","highScoreFlag","setHighScoreFlag","highScoreName","setHighScoreName","actualScore","useEffect","resetGrid","includes","window","confirm","prompt","newGrid","firstX","firstY","secondX","secondY","logic","fourArrays","checkGameFlag","newArray","cloneDeep","b","slow","fast","JSON","stringify","added","newX","newY","addNumber","left","readyGrid","right","reverse","up","_","colIndex","down","tabIndex","onKeyDown","keyCode","handleKeyDown","appStyle","Stack","Button","onClick","variant","buttonStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEMA,EAAY,SAACC,GACjB,OAAQA,GACN,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,UACT,QACE,MAAO,YAIPC,EAAe,SAACD,GACpB,OAAY,IAARA,GAAqB,IAARA,EAAkB,QAC5B,SAWME,EARF,SAACC,GACZ,OACE,sBAAMC,MAAOC,EAASF,EAAMH,KAA5B,SACE,sBAAMI,MAAOE,EAAb,SAAsC,IAAdH,EAAMH,IAAYG,EAAMH,IAAM,QAOtDM,EAAW,GAEXD,EAAW,SAACL,GAChB,MAAO,CACLO,QAAS,EACTC,MAAO,IACPC,OAAQ,IACRC,WAAYX,EAAUC,GACtBW,MAAOV,EAAaD,GACpBY,WAAY,GACZC,UAAW,GACXC,SAAU,OACVC,SAAU,WACVC,aAAc,KACdC,WAAY,SCnDD,SAASC,EAAIf,GAC1B,OACE,qBAAKC,MAAOC,EAAZ,SACGF,EAAMgB,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACb,cAAC,EAAD,CAAMtB,IAAKqB,GAAQC,QAM3B,IAAMjB,EAAW,CACfkB,QAAS,OACTf,MAAO,OACPgB,OAAQ,QCFJpB,EAAQ,CACZqB,UAAW,CACTC,MAAO,SACPC,MAAO,SACPf,WAAY,QAIDgB,EAnBF,SAACzB,GACZ,IAAI0B,EAAO1B,EAAM0B,KACjB,OACE,qBAAKzB,MAAOA,EAAMqB,UAAlB,SACGI,EAAKT,KAAI,SAACD,EAAKG,GACd,OAAO,cAACJ,EAAD,CAAKC,IAAKA,GAAUG,S,yCCa7BlB,EAAQ,CACZC,SAAU,CACRqB,MAAO,SAETI,WAAY,CACVJ,MAAO,OACPX,SAAU,WACVQ,QAAS,QACTf,MAAO,WACPE,WAAY,UACZI,SAAU,OACVG,WAAY,OACZD,aAAc,MACdT,QAAS,YACTI,MAAO,QACPoB,UAAW,SACXC,YAAa,QAEfC,eAAgB,CACdP,MAAO,QACPX,SAAU,WACVQ,QAAS,QACTb,WAAY,UACZI,SAAU,OACVG,WAAY,OACZD,aAAc,MACdT,QAAS,YACTI,MAAO,QACPoB,UAAW,SACXG,aAAc,OACdF,YAAa,SAGFG,EApDG,SAAChC,GACjB,OACE,sBAAKC,MAAOA,EAAMC,SAAlB,UACE,sBAAKD,MAAOA,EAAM0B,WAAlB,kBAEE,uBACC3B,EAAMiC,SAET,sBAAKhC,MAAOA,EAAM6B,eAAlB,uBAEE,uBACC9B,EAAMkC,UACP,uBACClC,EAAMmC,YCLTC,EAAkB,SAACC,GAAD,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,IA8O3CI,EA5OA,WACb,MAAwBC,mBACtB,IAAIC,MAAM,GAAGC,KAAK,GAAG3B,KAAI,kBAAM,IAAI0B,MAAM,GAAGC,KAAK,OADnD,mBAAOlB,EAAP,KAAamB,EAAb,KAIA,EAA0BH,mBAAS,GAAnC,mBAAOT,EAAP,KAAca,EAAd,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOR,EAAP,KAAkBa,EAAlB,KACA,EAA0CL,oBAAS,GAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KACA,EAA0CP,mBAAS,MAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAEIC,EAAc,EAElBC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WAAO,IAAD,gBACA3B,GADA,IACd,oCACQ6B,SAtBW,OAuBfC,OAAOC,QAAQ,2CACfH,MAJU,iCAMb,CAAC5B,IAEJ,IAAM4B,EAAY,YACM,IAAlBN,IACFG,EACEK,OAAOE,OAAO,wDAEhBT,GAAiB,IAUnB,IAPA,IAAIU,EAAU,IAAIhB,MAAM,GAAGC,KAAK,GAAG3B,KAAI,kBAAM,IAAI0B,MAAM,GAAGC,KAAK,MAC3DgB,EAASxB,EAAgB,GACzByB,EAASzB,EAAgB,GAEzB0B,EAAU1B,EAAgB,GAC1B2B,EAAU3B,EAAgB,GAEvBwB,IAAWE,GAAWD,IAAWE,GACtCD,EAAU1B,EAAgB,GAC1B2B,EAAU3B,EAAgB,GAG5BuB,EAAQC,GAAQC,GAAU,GAAKzB,EAAgB,GAAK,GACpDuB,EAAQG,GAASC,GAAW,GAAK3B,EAAgB,GAAK,GACtDgB,EAAc,EAEdN,EAAS,GACTD,EAAQc,IAmBJK,EAAQ,SAACC,EAAYC,GAEzB,IADA,IAAIC,EAAWC,oBAAUH,GAChB9C,EAAI,EAAGA,EAAI,EAAGA,IAIrB,IAHA,IAAIkD,EAAIF,EAAShD,GACbmD,EAAO,EACPC,EAAO,EACJD,EAAO,GACC,IAATC,EAKY,IAAZF,EAAEC,IAA2B,IAAZD,EAAEE,GACrBA,IACqB,IAAZF,EAAEC,IAA2B,IAAZD,EAAEE,IAC5BF,EAAEC,GAAQD,EAAEE,GACZF,EAAEE,GAAQ,EACVA,KACqB,IAAZF,EAAEC,IAA2B,IAAZD,EAAEE,GAC5BA,IACqB,IAAZF,EAAEC,IAA2B,IAAZD,EAAEE,KACxBF,EAAEC,KAAUD,EAAEE,IAChBF,EAAEC,GAAQD,EAAEC,GAAQD,EAAEE,GACtBF,EAAEE,GAAQ,EACNL,IACFd,EAAcnB,EAAQoC,EAAEC,GACxBxB,EAASM,GACLA,EAAclB,IAChBa,EAAaK,GACbH,GAAiB,KAGrBsB,EAAOD,EAAO,EACdA,KAGAC,IADAD,EACc,IA5BhBC,EAAOD,EAAO,EACdA,KAoCN,OAJIE,KAAKC,UAAUR,KAAgBO,KAAKC,UAAUN,IAzDlC,SAACR,GAGjB,IAFA,IAAIe,GAAQ,GAEJA,GAAO,CAGb,IAAIC,EAAOvC,EAAgB,GACvBwC,EAAOxC,EAAgB,GAEC,IAAxBuB,EAAQgB,GAAMC,KAChBjB,EAAQgB,GAAMC,GAAQ,GAAKxC,EAAgB,GAAK,GAChDsC,GAAQ,IA+CVG,CAAUV,GAGLA,GAGHW,EAAO,SAACZ,GACZ,IAAIa,EAAYX,oBAAU1C,GACtBiC,EAAUK,EAAMe,EAAWb,GAC/B,IAAIA,EAEF,OACEM,KAAKC,UAAUT,EAAML,EAASO,MAC9BM,KAAKC,UAAUd,GAJAd,EAAQc,IAQvBqB,EAAQ,SAACd,GACb,IAD+B,EAC3Ba,EAAYX,oBAAU1C,GADK,cAEfqD,GAFe,IAE/B,2BAA2B,SACrBE,WAHyB,8BAK/B,IAL+B,EAK3BtB,EAAUK,EAAMe,EAAWb,GALA,cAMfP,GANe,IAM/B,2BAAyB,SACnBsB,WAPyB,8BAU/B,IAAIf,EAEF,OACEM,KAAKC,UAAUT,EAAML,EAASO,MAC9BM,KAAKC,UAAUd,GAJAd,EAAQc,IAQvBuB,EAAK,SAAChB,GACV,IAAIa,EAAYX,oBAAU1C,GAEtBiC,EAAUoB,EAAU,GAAG9D,KAAI,SAACkE,EAAGC,GAAJ,OAC7BL,EAAU9D,KAAI,SAACD,GAAD,OAASA,EAAIoE,SAM7B,GAJAzB,EAAUK,EAAML,EAASO,GACzBa,EAAYpB,EAAQ,GAAG1C,KAAI,SAACkE,EAAGC,GAAJ,OACzBzB,EAAQ1C,KAAI,SAACD,GAAD,OAASA,EAAIoE,UAEvBlB,EAEF,OACEM,KAAKC,UAAUT,EAAMe,EAAWb,MAChCM,KAAKC,UAAUM,GAJAlC,EAAQkC,IAQvBM,EAAO,SAACnB,GACZ,IAD8B,EAC1Ba,EAAYX,oBAAU1C,GACtBiC,EAAUoB,EAAU,GAAG9D,KAAI,SAACkE,EAAGC,GAAJ,OAC7BL,EAAU9D,KAAI,SAACD,GAAD,OAASA,EAAIoE,SAHC,cAKdzB,GALc,IAK9B,2BAAyB,SACnBsB,WANwB,8BAa9B,OALAtB,EAAUK,EAAML,EAASO,GACzBa,EAAYpB,EAAQ,GAAG1C,KAAI,SAACkE,EAAGC,GAAJ,OACzBzB,EAAQ1C,KAAI,SAACD,GAAD,OAASA,EAAIoE,SAE3BL,EAAUE,UACNf,GACFrB,EAAQkC,IACD,GAGLP,KAAKC,UAAUT,EAAMe,EAAWb,MAChCM,KAAKC,UAAUM,IA+BrB,OACE,sBACEO,SAAS,IACTC,UAAW,SAACrE,GAAD,OA9BO,SAACA,GACrB,OAAQA,EAAEsE,SACR,KAAK,GAEHN,GAAG,GACH,MACF,KAAK,GAEHG,GAAK,GACL,MACF,KAAK,GAEHP,GAAK,GACL,MACF,KAAK,GAEHE,GAAM,GAKNE,GAAG,IAAUG,GAAK,IAAUP,GAAK,IAAUE,GAAM,KACnDxB,OAAOC,QAAQ,wDACfH,KAOkBmC,CAAcvE,IAChCjB,MAAOA,EAAMyF,SAHf,UAKE,cAAC,EAAD,CAAWzD,MAAOA,EAAOC,UAAWA,EAAWC,KAAMe,IACrD,cAAC,EAAD,CAAMxB,KAAMA,IACZ,uBACA,cAACiE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEC,QAASvC,EACTwC,QAAQ,YACR7F,MAAOA,EAAM8F,YAHf,UAKE,cAAC,IAAD,IALF,iBAeF9F,EAAQ,CACZyF,SAAU,CACRrF,MAAO,MACPgB,OAAQ,OACRX,UAAW,GACXqB,aAAc,IAEhBgE,YAAa,CACX1F,MAAO,MACPgB,OAAQ,OACRU,aAAc,KCzPHiE,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65b46e6c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst getColors = (num) => {\r\n  switch (num) {\r\n    case 2:\r\n      return \"#EBDCD0\";\r\n    case 4:\r\n      return \"#E9DBBA\";\r\n    case 8:\r\n      return \"#E9A067\";\r\n    case 16:\r\n      return \"#F08151\";\r\n    case 32:\r\n      return \"#F2654F\";\r\n    case 64:\r\n      return \"#F1462C\";\r\n    case 128:\r\n      return \"#E7C65E\";\r\n    case 256:\r\n      return \"#E8C350\";\r\n    default:\r\n      return \"#C2B3A3\";\r\n  }\r\n};\r\n\r\nconst getFontColor = (num) => {\r\n  if (num === 2 || num === 4) return \"black\";\r\n  return \"white\";\r\n};\r\n\r\nconst Tile = (props) => {\r\n  return (\r\n    <span style={divStyle(props.num)}>\r\n      <span style={numStyle}>{props.num !== 0 ? props.num : \"\"}</span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n\r\nconst numStyle = {};\r\n\r\nconst divStyle = (num) => {\r\n  return {\r\n    padding: 5,\r\n    width: 120,\r\n    height: 120,\r\n    background: getColors(num),\r\n    color: getFontColor(num),\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    fontSize: \"45px\",\r\n    position: \"relative\",\r\n    borderRadius: \"6%\",\r\n    fontWeight: \"bold\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default function Row(props) {\r\n  return (\r\n    <div style={divStyle}>\r\n      {props.row.map((e, i) => (\r\n        <Tile num={e} key={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst divStyle = {\r\n  display: \"flex\",\r\n  width: \"100%\",\r\n  margin: \"auto\",\r\n};\r\n","import React from \"react\";\r\nimport Row from \"./Row\";\r\n\r\nconst Grid = (props) => {\r\n  let grid = props.grid;\r\n  return (\r\n    <div style={style.gridStyle}>\r\n      {grid.map((row, i) => {\r\n        return <Row row={row} key={i} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  gridStyle: {\r\n    float: \"center\",\r\n    align: \"center\",\r\n    marginLeft: \"10%\",\r\n  },\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\n\r\nconst Scorecard = (props) => {\r\n  return (\r\n    <div style={style.divStyle}>\r\n      <div style={style.scoreStyle}>\r\n        Score\r\n        <br />\r\n        {props.score}\r\n      </div>\r\n      <div style={style.highScoreStyle}>\r\n        High Score\r\n        <br />\r\n        {props.highScore}\r\n        <br />\r\n        {props.name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  divStyle: {\r\n    float: \"right\",\r\n  },\r\n  scoreStyle: {\r\n    float: \"left\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    width: \"relative\",\r\n    background: \"#bbada0\",\r\n    fontSize: \"25px\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"6px\",\r\n    padding: \"15px 25px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    marginRight: \"10px\",\r\n  },\r\n  highScoreStyle: {\r\n    float: \"right\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    background: \"#bbada0\",\r\n    fontSize: \"25px\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"6px\",\r\n    padding: \"15px 25px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"10px\",\r\n    marginRight: \"10px\",\r\n  },\r\n};\r\nexport default Scorecard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Scorecard from \"./Scorecard\";\r\n\r\nconst WINNING_NUMBER = 128;\r\n\r\nconst getRandomNumber = (n) => Math.floor(Math.random() * n);\r\n\r\nconst Random = () => {\r\n  const [grid, setGrid] = useState(\r\n    new Array(4).fill(0).map(() => new Array(4).fill(0))\r\n  );\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const [highScoreFlag, setHighScoreFlag] = useState(false);\r\n  const [highScoreName, setHighScoreName] = useState(null);\r\n\r\n  let actualScore = 0;\r\n\r\n  useEffect(() => {\r\n    resetGrid();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    for (let r of grid)\r\n      if (r.includes(WINNING_NUMBER)) {\r\n        window.confirm(\"You have won the game. Congratulations!\");\r\n        resetGrid();\r\n      }\r\n  }, [grid]);\r\n\r\n  const resetGrid = () => {\r\n    if (highScoreFlag === true) {\r\n      setHighScoreName(\r\n        window.prompt(\"You have scored the highest! Please Enter Your Name\")\r\n      );\r\n      setHighScoreFlag(false);\r\n    }\r\n\r\n    let newGrid = new Array(4).fill(0).map(() => new Array(4).fill(0));\r\n    let firstX = getRandomNumber(4);\r\n    let firstY = getRandomNumber(4);\r\n\r\n    let secondX = getRandomNumber(4);\r\n    let secondY = getRandomNumber(4);\r\n\r\n    while (firstX === secondX && firstY === secondY) {\r\n      secondX = getRandomNumber(3);\r\n      secondY = getRandomNumber(3);\r\n    }\r\n\r\n    newGrid[firstX][firstY] = 2 * (getRandomNumber(2) + 1);\r\n    newGrid[secondX][secondY] = 2 * (getRandomNumber(2) + 1);\r\n    actualScore = 0;\r\n\r\n    setScore(0);\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const addNumber = (newGrid) => {\r\n    let added = false;\r\n    let gridFull = false;\r\n    while (!added) {\r\n      if (gridFull) break;\r\n\r\n      let newX = getRandomNumber(4);\r\n      let newY = getRandomNumber(4);\r\n\r\n      if (newGrid[newX][newY] === 0) {\r\n        newGrid[newX][newY] = 2 * (getRandomNumber(2) + 1);\r\n        added = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const logic = (fourArrays, checkGameFlag) => {\r\n    let newArray = cloneDeep(fourArrays);\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            b[fast] = 0;\r\n            if (checkGameFlag) {\r\n              actualScore = score + b[slow];\r\n              setScore(actualScore);\r\n              if (actualScore > highScore) {\r\n                setHighScore(actualScore);\r\n                setHighScoreFlag(true);\r\n              }\r\n            }\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(fourArrays) !== JSON.stringify(newArray)) {\r\n      addNumber(newArray);\r\n    }\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const left = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n    let newGrid = logic(readyGrid, checkGameFlag);\r\n    if (checkGameFlag) setGrid(newGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(newGrid, checkGameFlag)) ===\r\n        JSON.stringify(newGrid)\r\n      );\r\n  };\r\n\r\n  const right = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n    for (let row of readyGrid) {\r\n      row.reverse();\r\n    }\r\n    let newGrid = logic(readyGrid, checkGameFlag);\r\n    for (let row of newGrid) {\r\n      row.reverse();\r\n    }\r\n\r\n    if (checkGameFlag) setGrid(newGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(newGrid, checkGameFlag)) ===\r\n        JSON.stringify(newGrid)\r\n      );\r\n  };\r\n\r\n  const up = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n\r\n    let newGrid = readyGrid[0].map((_, colIndex) =>\r\n      readyGrid.map((row) => row[colIndex])\r\n    );\r\n    newGrid = logic(newGrid, checkGameFlag);\r\n    readyGrid = newGrid[0].map((_, colIndex) =>\r\n      newGrid.map((row) => row[colIndex])\r\n    );\r\n    if (checkGameFlag) setGrid(readyGrid);\r\n    else\r\n      return (\r\n        JSON.stringify(logic(readyGrid, checkGameFlag)) ===\r\n        JSON.stringify(readyGrid)\r\n      );\r\n  };\r\n\r\n  const down = (checkGameFlag) => {\r\n    let readyGrid = cloneDeep(grid);\r\n    let newGrid = readyGrid[0].map((_, colIndex) =>\r\n      readyGrid.map((row) => row[colIndex])\r\n    );\r\n    for (let row of newGrid) {\r\n      row.reverse();\r\n    }\r\n    newGrid = logic(newGrid, checkGameFlag);\r\n    readyGrid = newGrid[0].map((_, colIndex) =>\r\n      newGrid.map((row) => row[colIndex])\r\n    );\r\n    readyGrid.reverse();\r\n    if (checkGameFlag) {\r\n      setGrid(readyGrid);\r\n      return true;\r\n    } else\r\n      return (\r\n        JSON.stringify(logic(readyGrid, checkGameFlag)) ===\r\n        JSON.stringify(readyGrid)\r\n      );\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        // console.log(\"Upkey\");\r\n        up(true);\r\n        break;\r\n      case 40:\r\n        // console.log(\"Down\");\r\n        down(true);\r\n        break;\r\n      case 37:\r\n        // console.log(\"Left\");\r\n        left(true);\r\n        break;\r\n      case 39:\r\n        // console.log(\"right\");\r\n        right(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (up(false) && down(false) && left(false) && right(false)) {\r\n      window.confirm(\"No more moves left. Game is over. Thanks for playing\");\r\n      resetGrid();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      tabIndex=\"1\"\r\n      onKeyDown={(e) => handleKeyDown(e)}\r\n      style={style.appStyle}\r\n    >\r\n      <Scorecard score={score} highScore={highScore} name={highScoreName} />\r\n      <Grid grid={grid} />\r\n      <br />\r\n      <Stack>\r\n        <Button\r\n          onClick={resetGrid}\r\n          variant=\"contained\"\r\n          style={style.buttonStyle}\r\n        >\r\n          <ReplayIcon />\r\n          Reset\r\n        </Button>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n\r\nconst style = {\r\n  appStyle: {\r\n    width: \"39%\",\r\n    margin: \"auto\",\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n  },\r\n  buttonStyle: {\r\n    width: \"40%\",\r\n    margin: \"auto\",\r\n    marginBottom: 10,\r\n  },\r\n};\r\n","import React from \"react\";\nimport Random from \"./Random.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Random />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}